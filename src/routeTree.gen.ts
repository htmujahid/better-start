/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeRouteImport } from './routes/home/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as HomeAccountRouteImport } from './routes/home/account/route'
import { Route as HomeAccountIndexImport } from './routes/home/account/index'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/auth/sign-in/index'
import { Route as AuthResetPasswordIndexImport } from './routes/auth/reset-password/index'
import { Route as AuthForgotPasswordIndexImport } from './routes/auth/forgot-password/index'
import { Route as HomeAccountSessionsIndexImport } from './routes/home/account/sessions/index'
import { Route as HomeAccountRolesIndexImport } from './routes/home/account/roles/index'
import { Route as HomeAccountDangerIndexImport } from './routes/home/account/danger/index'

// Create/Update Routes

const HomeRouteRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)

const HomeAccountRouteRoute = HomeAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => HomeRouteRoute,
} as any)

const HomeAccountIndexRoute = HomeAccountIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeAccountRouteRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetPasswordIndexRoute = AuthResetPasswordIndexImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const HomeAccountSessionsIndexRoute = HomeAccountSessionsIndexImport.update({
  id: '/sessions/',
  path: '/sessions/',
  getParentRoute: () => HomeAccountRouteRoute,
} as any)

const HomeAccountRolesIndexRoute = HomeAccountRolesIndexImport.update({
  id: '/roles/',
  path: '/roles/',
  getParentRoute: () => HomeAccountRouteRoute,
} as any)

const HomeAccountDangerIndexRoute = HomeAccountDangerIndexImport.update({
  id: '/danger/',
  path: '/danger/',
  getParentRoute: () => HomeAccountRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRoute
    }
    '/home/account': {
      id: '/home/account'
      path: '/account'
      fullPath: '/home/account'
      preLoaderRoute: typeof HomeAccountRouteImport
      parentRoute: typeof HomeRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeRouteImport
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/reset-password/': {
      id: '/auth/reset-password/'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/home/account/': {
      id: '/home/account/'
      path: '/'
      fullPath: '/home/account/'
      preLoaderRoute: typeof HomeAccountIndexImport
      parentRoute: typeof HomeAccountRouteImport
    }
    '/home/account/danger/': {
      id: '/home/account/danger/'
      path: '/danger'
      fullPath: '/home/account/danger'
      preLoaderRoute: typeof HomeAccountDangerIndexImport
      parentRoute: typeof HomeAccountRouteImport
    }
    '/home/account/roles/': {
      id: '/home/account/roles/'
      path: '/roles'
      fullPath: '/home/account/roles'
      preLoaderRoute: typeof HomeAccountRolesIndexImport
      parentRoute: typeof HomeAccountRouteImport
    }
    '/home/account/sessions/': {
      id: '/home/account/sessions/'
      path: '/sessions'
      fullPath: '/home/account/sessions'
      preLoaderRoute: typeof HomeAccountSessionsIndexImport
      parentRoute: typeof HomeAccountRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface HomeAccountRouteRouteChildren {
  HomeAccountIndexRoute: typeof HomeAccountIndexRoute
  HomeAccountDangerIndexRoute: typeof HomeAccountDangerIndexRoute
  HomeAccountRolesIndexRoute: typeof HomeAccountRolesIndexRoute
  HomeAccountSessionsIndexRoute: typeof HomeAccountSessionsIndexRoute
}

const HomeAccountRouteRouteChildren: HomeAccountRouteRouteChildren = {
  HomeAccountIndexRoute: HomeAccountIndexRoute,
  HomeAccountDangerIndexRoute: HomeAccountDangerIndexRoute,
  HomeAccountRolesIndexRoute: HomeAccountRolesIndexRoute,
  HomeAccountSessionsIndexRoute: HomeAccountSessionsIndexRoute,
}

const HomeAccountRouteRouteWithChildren =
  HomeAccountRouteRoute._addFileChildren(HomeAccountRouteRouteChildren)

interface HomeRouteRouteChildren {
  HomeAccountRouteRoute: typeof HomeAccountRouteRouteWithChildren
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeAccountRouteRoute: HomeAccountRouteRouteWithChildren,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/home/account': typeof HomeAccountRouteRouteWithChildren
  '/home/': typeof HomeIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/home/account/': typeof HomeAccountIndexRoute
  '/home/account/danger': typeof HomeAccountDangerIndexRoute
  '/home/account/roles': typeof HomeAccountRolesIndexRoute
  '/home/account/sessions': typeof HomeAccountSessionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password': typeof AuthResetPasswordIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/home/account': typeof HomeAccountIndexRoute
  '/home/account/danger': typeof HomeAccountDangerIndexRoute
  '/home/account/roles': typeof HomeAccountRolesIndexRoute
  '/home/account/sessions': typeof HomeAccountSessionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/home/account': typeof HomeAccountRouteRouteWithChildren
  '/home/': typeof HomeIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/reset-password/': typeof AuthResetPasswordIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/home/account/': typeof HomeAccountIndexRoute
  '/home/account/danger/': typeof HomeAccountDangerIndexRoute
  '/home/account/roles/': typeof HomeAccountRolesIndexRoute
  '/home/account/sessions/': typeof HomeAccountSessionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/home'
    | '/home/account'
    | '/home/'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/home/account/'
    | '/home/account/danger'
    | '/home/account/roles'
    | '/home/account/sessions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/home'
    | '/auth/forgot-password'
    | '/auth/reset-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/home/account'
    | '/home/account/danger'
    | '/home/account/roles'
    | '/home/account/sessions'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/home'
    | '/home/account'
    | '/home/'
    | '/auth/forgot-password/'
    | '/auth/reset-password/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/home/account/'
    | '/home/account/danger/'
    | '/home/account/roles/'
    | '/home/account/sessions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  HomeRouteRoute: HomeRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/home"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/forgot-password/",
        "/auth/reset-password/",
        "/auth/sign-in/",
        "/auth/sign-up/"
      ]
    },
    "/home": {
      "filePath": "home/route.tsx",
      "children": [
        "/home/account",
        "/home/"
      ]
    },
    "/home/account": {
      "filePath": "home/account/route.tsx",
      "parent": "/home",
      "children": [
        "/home/account/",
        "/home/account/danger/",
        "/home/account/roles/",
        "/home/account/sessions/"
      ]
    },
    "/home/": {
      "filePath": "home/index.tsx",
      "parent": "/home"
    },
    "/auth/forgot-password/": {
      "filePath": "auth/forgot-password/index.tsx",
      "parent": "/auth"
    },
    "/auth/reset-password/": {
      "filePath": "auth/reset-password/index.tsx",
      "parent": "/auth"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx",
      "parent": "/auth"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx",
      "parent": "/auth"
    },
    "/home/account/": {
      "filePath": "home/account/index.tsx",
      "parent": "/home/account"
    },
    "/home/account/danger/": {
      "filePath": "home/account/danger/index.tsx",
      "parent": "/home/account"
    },
    "/home/account/roles/": {
      "filePath": "home/account/roles/index.tsx",
      "parent": "/home/account"
    },
    "/home/account/sessions/": {
      "filePath": "home/account/sessions/index.tsx",
      "parent": "/home/account"
    }
  }
}
ROUTE_MANIFEST_END */
